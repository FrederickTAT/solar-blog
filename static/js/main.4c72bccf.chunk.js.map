{"version":3,"sources":["App.module.less","router/pages.ts","router/index.ts","components/navbar/index.tsx","App.tsx","index.tsx","registerServiceWorker.js","components/navbar/index.module.less"],"names":["module","exports","PagePath","PageConfig","name","path","HOME","component","lazy","NavBar","ref","useRef","getNavbarHeight","scrollTop","document","documentElement","current","newHeight","Math","max","setNavbarRef","throttle","height","style","initHeightRef","debounce","useEffect","window","addEventListener","Planet","radius","fontSize","labelWidth","length","globalHeight","planetRef","globalRef","tagRef","sphereRef","planetHeight","getBoundingClientRect","_ratio","ratio","globalStyle","opacity","transform","className","Styles","planet","minWidth","oribit","global","sphere","borderWidth","width","bottom","divider","tag","navbar","id","axis","stars","left","solar","planets","App","app","fallback","content","pageConfigs","configQueue","routes","config","shift","push","getRoutes","ReactDOM","render","getElementById","navigator","swUrl","process","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,IAAM,aAAa,QAAU,mB,gECD1CC,E,kFAAAA,K,UAAAA,M,KAIUA,ICgBAC,EARuB,CACpC,CACEC,KAAM,eACNC,KDXWH,ECWII,KACfC,UAAWC,gBAAK,kBAAM,wD,gDCuGXC,EAlHI,WACjB,IAAMC,EAAMC,iBAAuB,MAI7BC,EAAkB,WACtB,IAAMC,EAAYC,SAASC,gBAAgBF,UAC3C,GAAIH,EAAIM,QAAS,CACf,IAAMC,EALQ,IAKgBJ,EAC9B,OAAOK,KAAKC,IAPE,GAOaF,KAGzBG,EAAeT,iBACnBU,oBAAS,WAAyB,IAAxBC,EAAuB,uDAXjB,GAYTZ,EAAIM,SAGLM,IACFZ,EAAIM,QAAQO,MAAMD,OAAlB,UAA8BA,EAA9B,SAED,KAECE,EAAgBb,iBACpBc,KAAS,WACPL,EAAaJ,QAAQJ,OACpB,MAGLc,qBAAU,WACRF,EAAcR,UACdW,OAAOC,iBAAiB,UAAU,WAChCR,EAAaJ,QAAQJ,UAEtB,IAEH,IAAMiB,EAA+C,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,OAAQ1B,EAAW,EAAXA,KACxD2B,EAAW,GAIXC,EAAaD,EAAW3B,EAAK6B,OAE7BC,EADW,EACIJ,EAAoBC,EAJvB,EAI8C,EAE1DI,EAAYxB,iBAAuB,MACnCyB,EAAYzB,iBAAuB,MACnC0B,EAAS1B,iBAAuB,MAChC2B,EAAY3B,iBAAuB,MAezC,OAdAe,qBAAU,WACRC,OAAOC,iBAAiB,UAAU,WAAO,IAAD,IAChCW,EAAY,UAAGJ,EAAUnB,eAAb,aAAG,EAAmBwB,wBAAwBlB,OAChE,GAAKiB,EAAL,CACA,IAAME,GAAUF,EAlDJ,IAkDG,IACTG,EAAQxB,KAAKC,IAAIsB,EAAS,IAAM,GAChCE,EAAW,UAAGP,EAAUpB,eAAb,aAAG,EAAmBO,MACnCoB,GAAeL,EAAUtB,SAAWqB,EAAOrB,UAC7CsB,EAAUtB,QAAQO,MAAMqB,QAAxB,UAAqCF,GACrCC,EAAYrB,OAAZ,UAAwBoB,EAAQR,EAAhC,MACAS,EAAYE,UAAZ,qBAnBe,EAmBuBH,EAAuBX,EAA7D,cAGH,IAED,sBAAKrB,IAAKyB,EAAWW,UAAWC,IAAOC,OAAQzB,MAAO,CAAE0B,SAAUjB,GAAlE,UACE,qBAAKc,UAAWC,IAAOG,SACvB,sBACExC,IAAK0B,EACLU,UAAWC,IAAOI,OAClB5B,MAAO,CACLD,OAAQY,EACRW,UAAU,cAAD,OAAgBd,GAAhB,QALb,UAQE,qBACEe,UAAWC,IAAOK,OAClB1C,IAAK4B,EACLf,MAAO,CACL8B,YAxCgB,EAyChBC,MArCO,EAqCAxB,EACPR,OAtCO,EAsCCQ,EACRyB,OAAQxB,MAGZ,qBAAKe,UAAWC,IAAOS,QAASjC,MAAO,CAAEgC,OAAQxB,KACjD,qBAAKe,UAAWC,IAAOU,IAAK/C,IAAK2B,EAAQd,MAAO,CAAEQ,YAAlD,SACG3B,WAOX,OACE,sBAAKM,IAAKA,EAAKoC,UAAWC,IAAOW,OAAQC,GAAG,SAA5C,UACE,qBAAKb,UAAWC,IAAOa,OACvB,sBAAKd,UAAWC,IAAOc,MAAOtC,MAAO,CAAEuC,MAAO,KAA9C,UACE,qBAAKhB,UAAWC,IAAOgB,MAAvB,SACE,sBAAMjB,UAAWC,IAAOU,IAAxB,qBAEF,sBAAKX,UAAWC,IAAOiB,QAAvB,UACE,cAACnC,EAAD,CAAQzB,KAAK,UAAU0B,OAAQ,MAC/B,cAACD,EAAD,CAAQzB,KAAK,QAAQ0B,OAAQ,MAC7B,cAACD,EAAD,CAAQzB,KAAK,QAAQ0B,OAAQ,IAC7B,cAACD,EAAD,CAAQzB,KAAK,OAAO0B,OAAQ,MAC5B,cAACD,EAAD,CAAQzB,KAAK,UAAU0B,OAAQ,QAC/B,cAACD,EAAD,CAAQzB,KAAK,SAAS0B,OAAQ,OAC9B,cAACD,EAAD,CAAQzB,KAAK,SAAS0B,OAAQ,OAC9B,cAACD,EAAD,CAAQzB,KAAK,UAAU0B,OAAQ,iBCjF1BmC,EAzBC,WAWd,OACE,sBAAKnB,UAAWC,IAAOmB,IAAvB,UACE,cAAC,EAAD,IACA,cAAC,IAAD,UACE,cAAC,WAAD,CAAUC,SAAU,6CAApB,SACE,cAAC,IAAD,UACE,qBAAKrB,UAAWC,IAAOqB,QAAvB,SAhBQ,SAACC,GAGjB,IAFA,IAAMC,EAAW,YAAOD,GAClBE,EAAwB,GACvBD,EAAYrC,QAAQ,CACzB,IAAMuC,EAASF,EAAYG,QAC3BF,EAAOG,KAAK,cAAC,IAAD,eAAWF,KAEzB,OAAOD,EASkCI,CAAUxE,e,8BCdvDyE,IAASC,OAAO,cAAC,EAAD,IAAS/D,SAASgE,eAAe,SCGF,kBAAmBC,WAC9DpD,OAAOC,iBAAiB,QAAQ,WAC9B,IAAMoD,EAAK,UAAMC,cAAN,sBACXF,UAAUG,cACPC,SAASH,GACTI,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfX,UAAUG,cAAcS,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAMrBC,OAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,U,kBCtCrE/F,EAAOC,QAAU,CAAC,OAAS,gBAAgB,KAAO,cAAc,MAAQ,eAAe,MAAQ,eAAe,IAAM,aAAa,QAAU,iBAAiB,OAAS,gBAAgB,OAAS,gBAAgB,OAAS,gBAAgB,QAAU,oB","file":"static/js/main.4c72bccf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app--2u2A7\",\"content\":\"content--2pOr2\"};","enum PagePath {\r\n  HOME = '/',\r\n}\r\n\r\nexport default PagePath;\r\n","import { ExoticComponent, lazy } from 'react';\r\nimport { RouteProps } from 'react-router';\r\nimport PagePath from './pages';\r\n\r\nexport interface PageConfigProps extends RouteProps {\r\n  name: string;\r\n  path: PagePath;\r\n  component: ExoticComponent;\r\n  children?: PageConfigProps[];\r\n  exact?: boolean;\r\n}\r\n\r\nconst PageConfig: PageConfigProps[] = [\r\n  {\r\n    name: '主页',\r\n    path: PagePath.HOME,\r\n    component: lazy(() => import('@pages/home/pages')),\r\n  },\r\n];\r\n\r\nexport default PageConfig;\r\n","import debounce from '@material-ui/utils/debounce';\r\nimport { throttle, transform } from 'lodash';\r\nimport { FC, useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport Styles from './index.module.less';\r\n\r\nconst NavBar: FC = () => {\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  const minHeight = 60;\r\n  const maxHeight = 600;\r\n\r\n  const getNavbarHeight = () => {\r\n    const scrollTop = document.documentElement.scrollTop;\r\n    if (ref.current) {\r\n      const newHeight = maxHeight - scrollTop;\r\n      return Math.max(minHeight, newHeight);\r\n    }\r\n  };\r\n  const setNavbarRef = useRef(\r\n    throttle((height = minHeight) => {\r\n      if (!ref.current) {\r\n        return;\r\n      }\r\n      if (height) {\r\n        ref.current.style.height = `${height}px`;\r\n      }\r\n    }, 10)\r\n  );\r\n  const initHeightRef = useRef(\r\n    debounce(() => {\r\n      setNavbarRef.current(getNavbarHeight());\r\n    }, 100)\r\n  );\r\n\r\n  useEffect(() => {\r\n    initHeightRef.current();\r\n    window.addEventListener('scroll', () => {\r\n      setNavbarRef.current(getNavbarHeight());\r\n    });\r\n  }, []);\r\n\r\n  const Planet: FC<{ name: string; radius: number }> = ({ radius, name }) => {\r\n    const fontSize = 18;\r\n    const sphereBorderWidth = 2;\r\n    const tagMargin = 8;\r\n    const bottomOffset = (tagMargin + sphereBorderWidth) / 2;\r\n    const labelWidth = fontSize * name.length;\r\n    const unitSize = 9;\r\n    const globalHeight = radius * unitSize + fontSize + tagMargin + 2 * sphereBorderWidth;\r\n\r\n    const planetRef = useRef<HTMLDivElement>(null);\r\n    const globalRef = useRef<HTMLDivElement>(null);\r\n    const tagRef = useRef<HTMLDivElement>(null);\r\n    const sphereRef = useRef<HTMLDivElement>(null);\r\n    useEffect(() => {\r\n      window.addEventListener('scroll', () => {\r\n        const planetHeight = planetRef.current?.getBoundingClientRect().height;\r\n        if (!planetHeight) return;\r\n        const _ratio = (planetHeight - minHeight) / (maxHeight - minHeight);\r\n        const ratio = Math.max(_ratio - 0.01, 0);\r\n        const globalStyle = globalRef.current?.style;\r\n        if (globalStyle && sphereRef.current && tagRef.current) {\r\n          sphereRef.current.style.opacity = `${ratio}`;\r\n          globalStyle.height = `${ratio * globalHeight}px`;\r\n          globalStyle.transform = `translateY(${ratio * bottomOffset + fontSize / 2}px)`;\r\n        }\r\n      });\r\n    }, []);\r\n    return (\r\n      <div ref={planetRef} className={Styles.planet} style={{ minWidth: labelWidth }}>\r\n        <div className={Styles.oribit} />\r\n        <div\r\n          ref={globalRef}\r\n          className={Styles.global}\r\n          style={{\r\n            height: globalHeight,\r\n            transform: `translateY(${fontSize / 2 + bottomOffset}px)`,\r\n          }}\r\n        >\r\n          <div\r\n            className={Styles.sphere}\r\n            ref={sphereRef}\r\n            style={{\r\n              borderWidth: sphereBorderWidth,\r\n              width: radius * unitSize,\r\n              height: radius * unitSize,\r\n              bottom: fontSize + tagMargin,\r\n            }}\r\n          ></div>\r\n          <div className={Styles.divider} style={{ bottom: fontSize / 2 }}></div>\r\n          <div className={Styles.tag} ref={tagRef} style={{ fontSize }}>\r\n            {name}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div ref={ref} className={Styles.navbar} id=\"navbar\">\r\n      <div className={Styles.axis} />\r\n      <div className={Styles.stars} style={{ left: -1000 }}>\r\n        <div className={Styles.solar}>\r\n          <span className={Styles.tag}>SOLAR</span>\r\n        </div>\r\n        <div className={Styles.planets}>\r\n          <Planet name=\"MERCURY\" radius={0.38}></Planet>\r\n          <Planet name=\"VENUS\" radius={0.94}></Planet>\r\n          <Planet name=\"EARTH\" radius={1}></Planet>\r\n          <Planet name=\"MARS\" radius={0.53}></Planet>\r\n          <Planet name=\"JUPITER\" radius={11.21}></Planet>\r\n          <Planet name=\"SATURN\" radius={9.45}></Planet>\r\n          <Planet name=\"URANUS\" radius={4.01}></Planet>\r\n          <Planet name=\"NEPTUNE\" radius={3.88}></Planet>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import { FC, Suspense } from 'react';\r\nimport Styles from './App.module.less';\r\nimport { Route, Switch, BrowserRouter } from 'react-router-dom';\r\nimport PageConfig, { PageConfigProps } from './router';\r\nimport NavBar from './components/navbar';\r\n\r\nconst App: FC = () => {\r\n  const getRoutes = (pageConfigs: PageConfigProps[]) => {\r\n    const configQueue = [...pageConfigs];\r\n    const routes: JSX.Element[] = [];\r\n    while (configQueue.length) {\r\n      const config = configQueue.shift();\r\n      routes.push(<Route {...config} />);\r\n    }\r\n    return routes;\r\n  };\r\n\r\n  return (\r\n    <div className={Styles.app}>\r\n      <NavBar />\r\n      <BrowserRouter>\r\n        <Suspense fallback={<div>Loading...</div>}>\r\n          <Switch>\r\n            <div className={Styles.content}>{getRoutes(PageConfig)}</div>\r\n          </Switch>\r\n        </Suspense>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport './index.css';\r\nimport '@fontsource/roboto/300.css';\r\nimport '@fontsource/roboto/400.css';\r\nimport '@fontsource/roboto/500.css';\r\nimport '@fontsource/roboto/700.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n","/* eslint-disable */\r\n// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n      navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n          registration.onupdatefound = () => {\r\n            const installingWorker = registration.installing;\r\n            installingWorker.onstatechange = () => {\r\n              if (installingWorker.state === 'installed') {\r\n                if (navigator.serviceWorker.controller) {\r\n                  // At this point, the old content will have been purged and\r\n                  // the fresh content will have been added to the cache.\r\n                  // It's the perfect time to display a \"New content is\r\n                  // available; please refresh.\" message in your web app.\r\n                  console.log('New content is available; please refresh.');\r\n                } else {\r\n                  // At this point, everything has been precached.\r\n                  // It's the perfect time to display a\r\n                  // \"Content is cached for offline use.\" message.\r\n                  console.log('Content is cached for offline use.');\r\n                }\r\n              }\r\n            };\r\n          };\r\n        })\r\n        .catch(error => {\r\n          console.error('Error during service worker registration:', error);\r\n        });\r\n    });\r\n  }\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"navbar--gC3xW\",\"axis\":\"axis--2kX64\",\"stars\":\"stars--25aeA\",\"solar\":\"solar--1AItA\",\"tag\":\"tag--32LrE\",\"planets\":\"planets--2hzgb\",\"planet\":\"planet--v_lDK\",\"global\":\"global--fMFEB\",\"sphere\":\"sphere--2WOcI\",\"divider\":\"divider--3YQh5\"};"],"sourceRoot":""}